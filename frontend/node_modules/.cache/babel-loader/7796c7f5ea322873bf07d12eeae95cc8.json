{"ast":null,"code":"import { __rest, __assign } from './_virtual/_tslib.js';\nimport * as React from 'react';\nimport MuiCheckbox from '@material-ui/core/Checkbox';\nimport invariant from 'tiny-warning';\n\nfunction fieldToCheckbox(_a) {\n  var disabled = _a.disabled,\n      _b = _a.field,\n      fieldOnBlur = _b.onBlur,\n      field = __rest(_b, [\"onBlur\"]),\n      isSubmitting = _a.form.isSubmitting,\n      type = _a.type,\n      onBlur = _a.onBlur,\n      props = __rest(_a, [\"disabled\", \"field\", \"form\", \"type\", \"onBlur\"]);\n\n  var indeterminate = !Array.isArray(field.value) && field.value == null;\n\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(type === 'checkbox', \"property type=checkbox is missing from field \" + field.name + \", this can caused unexpected behaviour\");\n  }\n\n  return __assign(__assign({\n    disabled: disabled !== null && disabled !== void 0 ? disabled : isSubmitting,\n    indeterminate: indeterminate,\n    onBlur: onBlur !== null && onBlur !== void 0 ? onBlur : function (e) {\n      fieldOnBlur(e !== null && e !== void 0 ? e : field.name);\n    }\n  }, field), props);\n}\n\nfunction Checkbox(props) {\n  return React.createElement(MuiCheckbox, __assign({}, fieldToCheckbox(props)));\n}\n\nCheckbox.displayName = 'FormikMaterialUICheckbox';\nexport { Checkbox, fieldToCheckbox };","map":{"version":3,"sources":["../../src/Checkbox.tsx"],"names":[],"mappings":";;;;;SAuBgB,e,CAAgB,E,EAOhB;AANd,MAAA,QAAQ,GAAA,EAAA,CAAA,QAAR;AAAA,MACA,EAAA,GAAA,EAAA,CAAA,KADA;AAAA,MACiB,WAAW,GAAA,EAAA,CAAA,MAD5B;AAAA,MACiC,KAAK,GAAA,MAAA,CAAA,EAAA,EAA/B,CAAA,QAAA,CAA+B,CADtC;AAAA,MAEQ,YAAY,GAAA,EAAA,CAAA,IAAA,CAAA,YAFpB;AAAA,MAGA,IAAI,GAAA,EAAA,CAAA,IAHJ;AAAA,MAIA,MAAM,GAAA,EAAA,CAAA,MAJN;AAAA,MAKG,KAAK,GAAA,MAAA,CAAA,EAAA,EANsB,CAAA,UAAA,EAAA,OAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,CAMtB,CALR;;AAOA,MAAM,aAAa,GAAG,CAAC,KAAK,CAAC,OAAN,CAAc,KAAK,CAAC,KAApB,CAAD,IAA+B,KAAK,CAAC,KAAN,IAAe,IAApE;;AAEA,MAAI,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,IAAA,SAAS,CACP,IAAI,KAAK,UADF,EAEP,kDAAgD,KAAK,CAAC,IAAtD,GAA0D,wCAFnD,CAAT;AAID;;AAED,SAAA,QAAA,CAAA,QAAA,CAAA;AACE,IAAA,QAAQ,EAAE,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAA,QAAA,GAAY,YADxB;AAEE,IAAA,aAAa,EAAA,aAFf;AAGE,IAAA,MAAM,EACJ,MAAM,KAAA,IAAN,IAAA,MAAM,KAAA,KAAA,CAAN,GAAA,MAAA,GACA,UAAU,CAAV,EAAW;AACT,MAAA,WAAW,CAAC,CAAC,KAAA,IAAD,IAAA,CAAC,KAAA,KAAA,CAAD,GAAA,CAAA,GAAK,KAAK,CAAC,IAAZ,CAAX;AACD;AAPL,GAAA,EAQK,KARL,CAAA,EASK,KATL,CAAA;AAWD;;SAEe,Q,CAAS,K,EAAoB;AAC3C,SAAO,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY,QAAA,CAAA,EAAA,EAAK,eAAe,CAAC,KAAD,CAApB,CAAZ,CAAP;AACD;;AAED,QAAQ,CAAC,WAAT,GAAuB,0BAAvB","sourcesContent":["import * as React from 'react';\nimport MuiCheckbox, {\n  CheckboxProps as MuiCheckboxProps,\n} from '@material-ui/core/Checkbox';\nimport { FieldProps } from 'formik';\nimport invariant from 'tiny-warning';\n\nexport interface CheckboxProps\n  extends FieldProps,\n    Omit<\n      MuiCheckboxProps,\n      | 'name'\n      | 'value'\n      | 'error'\n      | 'form'\n      | 'checked'\n      | 'defaultChecked'\n      // Excluded for conflict with Field type\n      | 'type'\n    > {\n  type?: string;\n}\n\nexport function fieldToCheckbox({\n  disabled,\n  field: { onBlur: fieldOnBlur, ...field },\n  form: { isSubmitting },\n  type,\n  onBlur,\n  ...props\n}: CheckboxProps): MuiCheckboxProps {\n  const indeterminate = !Array.isArray(field.value) && field.value == null;\n\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(\n      type === 'checkbox',\n      `property type=checkbox is missing from field ${field.name}, this can caused unexpected behaviour`\n    );\n  }\n\n  return {\n    disabled: disabled ?? isSubmitting,\n    indeterminate,\n    onBlur:\n      onBlur ??\n      function (e) {\n        fieldOnBlur(e ?? field.name);\n      },\n    ...field,\n    ...props,\n  };\n}\n\nexport function Checkbox(props: CheckboxProps) {\n  return <MuiCheckbox {...fieldToCheckbox(props)} />;\n}\n\nCheckbox.displayName = 'FormikMaterialUICheckbox';\n"]},"metadata":{},"sourceType":"module"}