{"ast":null,"code":"import { __assign } from './_virtual/_tslib.js';\nimport * as React from 'react';\nimport { getIn } from 'formik';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nvar SimpleFileUpload = function (_a) {\n  var field = _a.field,\n      _b = _a.form,\n      isSubmitting = _b.isSubmitting,\n      touched = _b.touched,\n      errors = _b.errors,\n      setFieldValue = _b.setFieldValue,\n      label = _a.label,\n      accept = _a.accept,\n      _c = _a.disabled,\n      disabled = _c === void 0 ? false : _c,\n      inputProps = _a.InputProps,\n      inputLabelProps = _a.InputLabelProps,\n      formControlProps = _a.FormControlProps;\n  var error = getIn(touched, field.name) && getIn(errors, field.name);\n  return React.createElement(FormControl, __assign({}, formControlProps), label && React.createElement(InputLabel, __assign({\n    shrink: true,\n    error: !!error\n  }, inputLabelProps), label), React.createElement(Input, __assign({\n    error: !!error,\n    inputProps: {\n      type: 'file',\n      accept: accept,\n      disabled: disabled || isSubmitting,\n      name: field.name,\n      onChange: function (event) {\n        if (inputProps === null || inputProps === void 0 ? void 0 : inputProps.onChange) {\n          inputProps.onChange(event);\n        } else {\n          var file = event.currentTarget.files[0];\n          setFieldValue(field.name, file);\n        }\n      }\n    }\n  }, inputProps)), error && React.createElement(FormHelperText, {\n    error: true\n  }, error));\n};\n\nexport { SimpleFileUpload };","map":{"version":3,"sources":["../../src/SimpleFileUpload.tsx"],"names":[],"mappings":";;;;;;;;IAgBa,gBAAgB,GAAG,UAAC,EAAD,EASR;MARtB,KAAK,GAAA,EAAA,CAAA,K;MACL,EAAA,GAAA,EAAA,CAAA,I;MAAQ,YAAY,GAAA,EAAA,CAAA,Y;MAAE,OAAO,GAAA,EAAA,CAAA,O;MAAE,MAAM,GAAA,EAAA,CAAA,M;MAAE,aAAa,GAAA,EAAA,CAAA,a;MACpD,KAAK,GAAA,EAAA,CAAA,K;MACL,MAAM,GAAA,EAAA,CAAA,M;MACN,EAAA,GAAA,EAAA,CAAA,Q;MAAA,QAAQ,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,E;MACJ,UAAU,GAAA,EAAA,CAAA,U;MACL,eAAe,GAAA,EAAA,CAAA,e;MACd,gBAAgB,GAAA,EAAA,CAAA,gB;AAElC,MAAM,KAAK,GAAG,KAAK,CAAC,OAAD,EAAU,KAAK,CAAC,IAAhB,CAAL,IAA8B,KAAK,CAAC,MAAD,EAAS,KAAK,CAAC,IAAf,CAAjD;AAEA,SACE,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY,QAAA,CAAA,EAAA,EAAK,gBAAL,CAAZ,EACG,KAAK,IACJ,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,QAAA,CAAA;AAAC,IAAA,MAAM,EAAA,IAAP;AAAQ,IAAA,KAAK,EAAE,CAAC,CAAC;AAAjB,GAAA,EAA4B,eAA5B,CAAX,EACG,KADH,CAFJ,EAME,KAAA,CAAA,aAAA,CAAC,KAAD,EAAM,QAAA,CAAA;AACJ,IAAA,KAAK,EAAE,CAAC,CAAC,KADL;AAEJ,IAAA,UAAU,EAAE;AACV,MAAA,IAAI,EAAE,MADI;AAEV,MAAA,MAAM,EAAA,MAFI;AAGV,MAAA,QAAQ,EAAE,QAAQ,IAAI,YAHZ;AAIV,MAAA,IAAI,EAAE,KAAK,CAAC,IAJF;AAMV,MAAA,QAAQ,EAAE,UAAC,KAAD,EAA8B;AACtC,YAAI,UAAU,KAAA,IAAV,IAAA,UAAU,KAAA,KAAA,CAAV,GAAU,KAAA,CAAV,GAAA,UAAU,CAAE,QAAhB,EAA0B;AACxB,UAAA,UAAU,CAAC,QAAX,CAAoB,KAApB;AACD,SAFD,MAEO;AACL,cAAM,IAAI,GAAG,KAAK,CAAC,aAAN,CAAoB,KAApB,CAA0B,CAA1B,CAAb;AACA,UAAA,aAAa,CAAC,KAAK,CAAC,IAAP,EAAa,IAAb,CAAb;AACD;AACF;AAbS;AAFR,GAAA,EAiBA,UAjBA,CAAN,CANF,EAyBG,KAAK,IAAI,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe;AAAC,IAAA,KAAK,EAAA;AAAN,GAAf,EAAuB,KAAvB,CAzBZ,CADF;AA6BF,C","sourcesContent":["import * as React from 'react';\nimport { FieldProps, getIn } from 'formik';\nimport FormControl, { FormControlProps } from '@material-ui/core/FormControl';\nimport InputLabel, { InputLabelProps } from '@material-ui/core/InputLabel';\nimport Input, { InputProps } from '@material-ui/core/Input';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nexport interface SimpleFileUploadProps extends FieldProps {\n  label: string;\n  accept: string;\n  disabled?: boolean;\n  InputProps?: Omit<InputProps, 'name' | 'type' | 'label'>;\n  InputLabelProps?: InputLabelProps;\n  FormControlProps?: FormControlProps;\n}\n\nexport const SimpleFileUpload = ({\n  field,\n  form: { isSubmitting, touched, errors, setFieldValue },\n  label,\n  accept,\n  disabled = false,\n  InputProps: inputProps,\n  InputLabelProps: inputLabelProps,\n  FormControlProps: formControlProps,\n}: SimpleFileUploadProps) => {\n  const error = getIn(touched, field.name) && getIn(errors, field.name);\n\n  return (\n    <FormControl {...formControlProps}>\n      {label && (\n        <InputLabel shrink error={!!error} {...inputLabelProps}>\n          {label}\n        </InputLabel>\n      )}\n      <Input\n        error={!!error}\n        inputProps={{\n          type: 'file',\n          accept,\n          disabled: disabled || isSubmitting,\n          name: field.name,\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          onChange: (event: React.ChangeEvent<any>) => {\n            if (inputProps?.onChange) {\n              inputProps.onChange(event);\n            } else {\n              const file = event.currentTarget.files[0];\n              setFieldValue(field.name, file);\n            }\n          },\n        }}\n        {...inputProps}\n      />\n      {error && <FormHelperText error>{error}</FormHelperText>}\n    </FormControl>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}